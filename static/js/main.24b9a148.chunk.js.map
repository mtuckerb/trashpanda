{"version":3,"sources":["utils/bus.js","lib/getAnswer.js","Flash.js","trashpanda.png","App.js","reportWebVitals.js","index.js"],"names":["EventEmitter","checkAnswer","question_id","answer","callback","a","requestOptions","method","headers","Origin","mode","body","JSON","stringify","id","fetch","then","response","json","data","question","status","Flash","useState","visibility","setVisibility","message","setMessage","type","setType","useEffect","Bus","addListener","setTimeout","className","App","window","flash","emit","setQuestion","questionId","setQuestionId","currentAnswer","setCurrentAnswer","src","Logo","dangerouslySetInnerHTML","__html","onChange","e","target","value","onClick","s","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPACe,M,OAAIA,G,uBCoBJC,EArBE,uCAAG,WAAOC,EAAaC,EAAQC,GAA5B,eAAAC,EAAA,6DACZC,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,OAAQ,yBACRC,KAAM,WAERC,KAAMC,KAAKC,UAAU,CAAEC,GAAIZ,EAAaC,OAAQA,KAGlDY,MACE,4EACAT,GAECU,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLf,EAASe,EAAKC,SAAUD,EAAKL,GAAIK,EAAKE,WAjBxB,kBAmBX,IAnBW,2CAAH,0D,eCkCFC,EA9BD,WAAO,IAAD,EACgBC,oBAAS,GADzB,mBACbC,EADa,KACDC,EADC,OAEUF,mBAAS,IAFnB,mBAEbG,EAFa,KAEJC,EAFI,OAGIJ,mBAAS,IAHb,mBAGbK,EAHa,KAGPC,EAHO,KAKlBC,qBAAU,WACRC,EAAIC,YAAY,SAAS,YAAwB,IAArBN,EAAoB,EAApBA,QAASE,EAAW,EAAXA,KACnCH,GAAc,GACdE,EAAWD,GACXG,EAAQD,EAAO,uBACfK,YAAW,WACTR,GAAc,KACb,UAEJ,IAaH,OAVMD,EAEA,qBAAKV,GAAG,QAAQoB,UAAWN,EAA3B,SACGF,IAIE,qBAAKZ,GAAG,QAAR,qBC5BE,MAA0B,uCCgE1BqB,EAzDH,WACVC,OAAOC,MAAQ,SAACX,EAASE,GAAV,OAAmBG,EAAIO,KAAK,QAAS,CAAEZ,UAASE,UAD/C,MAGgBL,mBAAS,iBAHzB,mBAGTH,EAHS,KAGCmB,EAHD,OAIoBhB,mBAAS,GAJ7B,mBAITiB,EAJS,KAIGC,EAJH,OAK0BlB,mBAAS,IALnC,mBAKTmB,EALS,KAKMC,EALN,KAgBhBb,qBAAU,WACR7B,EAAYuC,EAAYE,GAAe,SAACtB,EAAUoB,GAChDD,EAAYnB,GACZqB,EAAcD,QAEf,IArBa,MAuBMjB,mBAAS,IAvBf,mBAuBXK,EAvBW,KAuBLC,EAvBK,KAkChB,OATAC,qBAAU,WACRC,EAAIC,YAAY,SAAS,YAAuB,EAApBN,QAAqB,IAAZE,EAAW,EAAXA,KACnCC,EAAQD,GACRK,YAAW,WACTJ,EAAQ,MACP,UAEJ,IAGD,sBAAKK,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKU,IAAKC,EAAMX,UAAU,SAD5B,uCAIA,cAAC,EAAD,IACA,qBAAKpB,GAAG,WAAWgC,wBAAyB,CAAEC,OAAQ3B,KACtD,0BACEc,UAAWN,EACXd,GAAI0B,EACJQ,SAAU,SAACC,GAAD,OAAON,EAAiBM,EAAEC,OAAOC,QAC3CA,MAAOT,IAET,uBACA,uBACA,wBAAQ5B,GAAG,SAASsC,QA3CE,WACxBnD,EAAYuC,EAAYE,GAAe,SAACtB,EAAUoB,GAAwB,IAAZa,EAAW,uDAAP,GAChEV,EAAiB,IACjBJ,EAAYnB,GACZqB,EAAcD,GACdJ,OAAOC,MAAMgB,EAAE3B,QAAS2B,EAAEhC,YAsC1B,mCC7CSiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxC,MAAK,YAAkD,IAA/CyC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAK1BZ,M","file":"static/js/main.24b9a148.chunk.js","sourcesContent":["import EventEmitter from \"events\";\nexport default new EventEmitter();\n","const checkAnswer = async (question_id, answer, callback) => {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Origin: \"https://localhost:3000\",\n      mode: \"no-cors\",\n    },\n    body: JSON.stringify({ id: question_id, answer: answer }),\n  };\n\n  fetch(\n    \"https://fezokn45b9.execute-api.us-west-1.amazonaws.com/default/trashPanda\",\n    requestOptions\n  )\n    .then((response) => response.json())\n    .then((data) => {\n      callback(data.question, data.id, data.status);\n    });\n  return [];\n};\nexport default checkAnswer;\n","import { useState, useEffect } from \"react\";\nimport \"./Flash.css\";\nimport Bus from \"./utils/bus.js\";\n\nconst Flash = () => {\n  let [visibility, setVisibility] = useState(false);\n  let [message, setMessage] = useState(\"\");\n  let [type, setType] = useState(\"\");\n\n  useEffect(() => {\n    Bus.addListener(\"flash\", ({ message, type }) => {\n      setVisibility(true);\n      setMessage(message);\n      setType(type + \" flash hide-opacity\");\n      setTimeout(() => {\n        setVisibility(false);\n      }, 4000);\n    });\n  }, []);\n\n  const body = () => {\n    if (visibility) {\n      return (\n        <div id=\"flash\" className={type}>\n          {message}\n        </div>\n      );\n    } else {\n      return <div id=\"flash\"> &nbsp; </div>;\n    }\n  };\n  return body();\n};\n\nexport default Flash;\n","export default __webpack_public_path__ + \"static/media/trashpanda.abba0b14.png\";","import \"./App.css\";\nimport Bus from \"./utils/bus.js\";\nimport React, { useEffect, useState } from \"react\";\nimport checkAnswer from \"./lib/getAnswer.js\";\nimport Flash from \"./Flash.js\";\nimport Logo from \"./trashpanda.png\";\n\nconst App = () => {\n  window.flash = (message, type) => Bus.emit(\"flash\", { message, type });\n\n  const [question, setQuestion] = useState(\"â€¦loading\");\n  const [questionId, setQuestionId] = useState(1);\n  const [currentAnswer, setCurrentAnswer] = useState(\"\");\n\n  const handleClick = () => () => {\n    checkAnswer(questionId, currentAnswer, (question, questionId, s = {}) => {\n      setCurrentAnswer(\"\");\n      setQuestion(question);\n      setQuestionId(questionId);\n      window.flash(s.message, s.status);\n    });\n  };\n\n  useEffect(() => {\n    checkAnswer(questionId, currentAnswer, (question, questionId) => {\n      setQuestion(question);\n      setQuestionId(questionId);\n    });\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  let [type, setType] = useState(\"\");\n\n  useEffect(() => {\n    Bus.addListener(\"flash\", ({ message, type }) => {\n      setType(type);\n      setTimeout(() => {\n        setType(\"\");\n      }, 4000);\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={Logo} className=\"logo\" />\n        Trash Panda Online Scavenger Hunt\n      </header>\n      <Flash />\n      <div id=\"question\" dangerouslySetInnerHTML={{ __html: question }} />\n      <textarea\n        className={type}\n        id={questionId}\n        onChange={(e) => setCurrentAnswer(e.target.value)}\n        value={currentAnswer}\n      ></textarea>\n      <br />\n      <br />\n      <button id=\"Submit\" onClick={handleClick()}>\n        Check Your Answer\n      </button>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}